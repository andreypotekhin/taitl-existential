<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.taitl</groupId>
	<artifactId>existential</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>taitl-existential</name>
	<description>Simple validation framework based on expressions analogous to notations for math logic.</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven-compiler-plugin-version>3.8.1</maven-compiler-plugin-version>
		<maven-formatter-plugin-version>2.16.0</maven-formatter-plugin-version>
		<maven-surefire-plugin-version>2.22.2</maven-surefire-plugin-version>
		<maven-failsafe-plugin-version>3.0.0-M5</maven-failsafe-plugin-version>
		<maven-assembly-plugin-version>3.3.0</maven-assembly-plugin-version>
		<maven-javadoc-plugin-version>3.3.1</maven-javadoc-plugin-version>
		<junit-5-version>5.8.1</junit-5-version>
		<jacoco-maven-plugin-version>0.8.7</jacoco-maven-plugin-version>
		<mockito-version>4.2.0</mockito-version>
		<powermock-version>2.0.9</powermock-version>
		<maven-checkstyle-plugin-version>3.1.2</maven-checkstyle-plugin-version>
		<!-- maven-pmd-plugin 3.15.0 uses PMD 6.38.0  -->
		<maven-pmd-plugin-version>3.15.0</maven-pmd-plugin-version>
		<maven-jxr-plugin-version>3.1.1</maven-jxr-plugin-version>
		<!-- Skip integration tests? -->
		<skip-integration-tests>false</skip-integration-tests>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit-5-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>${powermock-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin-version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- Auto-format source files -->
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>${maven-formatter-plugin-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configFile>${project.basedir}/src/tools/configs/java-code-formatter/java-code-formatter.xml</configFile>
					<overrideConfigCompilerVersion>true</overrideConfigCompilerVersion>
					<compilerSource>${maven.compiler.source}</compilerSource>
					<compilerCompliance>${maven.compiler.source}</compilerCompliance>
					<compilerTargetPlatform>${maven.compiler.target}</compilerTargetPlatform>
					<excludes>
						<exclude>com/any/generated/files/you/have/</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<!-- Enforce coding style with Checkstyle -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin-version}</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<configLocation>src/tools/configs/checkstyle/checkstyle-java.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<sourceDirectory>${project.build.sourceDirectories}</sourceDirectory>
							<violationSeverity>warning</violationSeverity>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
							<!-- Exclude Proof of Concept/Sandbox classes, Test Cases -->
							<excludes>**/poc/**/*,**/sandbox/**/*,**/*test/**/*,**/*Test.*</excludes>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>9.2.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<!-- Perform static analysis with PMD -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd-plugin-version}</version>
				<executions>
					<execution>
						<id>pmd</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rulesets>
						<ruleset>src/tools/configs/pmd/pmd-ruleset.xml</ruleset>
					</rulesets>
					<printFailingErrors>true</printFailingErrors>
					<linkXref>true</linkXref>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.8</targetJdk>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
				</configuration>
				<dependencies>
					<dependency>
					    <groupId>org.ow2.asm</groupId>
					    <artifactId>asm</artifactId>
					    <version>9.2</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin-version}</version>
				<configuration>
					<!-- Exclude integration and end-to-end tests from 'validate', 'compile' 
						and 'test' goals - they are part of 'integration-test' and 'verify' goals 
						defined later for Failsafe plugin -->
					<configuration>
						<excludes>
							<exclude>**/integration/*.*</exclude>
							<exclude>**/it/*.*</exclude>
							<exclude>%regex[.*IT.*]</exclude>
							<exclude>%regex[.*IntegrationTest.*]</exclude>
							<exclude>**/slow/*.*</exclude>
							<exclude>%regex[.*Slow.*]</exclude>
							<exclude>**/end-to-end/*.*</exclude>
							<exclude>**/ete/*.*</exclude>
							<exclude>%regex[.*ET.*]</exclude>
							<exclude>%regex[.*EndToEndTest.*]</exclude>
						</excludes>
					</configuration>
				</configuration>
			</plugin>
			<plugin>
				<!-- Enforce test coverage levels -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin-version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<excludes>
								<!-- Exclude Proof of Concept/Sandbox classes, Test Cases -->
								<exclude>**/poc/**/*</exclude>
								<exclude>**/sandbox/**/*</exclude>
								<exclude>**/*Test.*</exclude>
								<exclude>**/*test/**/.*</exclude>
							</excludes>
							<rules>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
										<limit>
											<counter>METHOD</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.89</minimum>
										</limit>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.60</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Include integration tests in 'integration-test' and 'verify' goals -->
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skipTests>${skip-integration-tests}</skipTests>
					<includes>
						<include>**/integration/*.*</include>
						<include>**/it/*.*</include>
						<include>%regex[.*IT.*]</include>
						<include>%regex[.*IntegrationTest.*]</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<!-- Include all dependencies in the target jar -->
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin-version}</version>
				<executions>
					<execution>
						<id>create-archive</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${main-class}</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<finalName>existential</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<attach>false</attach>
					<outputDirectory>${project.basedir}</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin-version}</version>
				<configuration>
					<show>public</show>
				</configuration>
			</plugin>
			<plugin>
				<!-- Allow cross-linking from error messages back to source files -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin-version}</version>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<!-- Allow cross-linking from error messages back to source files -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin-version}</version>
			</plugin>
		</plugins>
	</reporting>
</project>